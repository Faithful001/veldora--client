import { Metadata } from "next";
import Image from "next/image";
import {
  Activity,
  CreditCard,
  DollarSign,
  Download,
  Users,
} from "lucide-react";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { CalendarDateRangePicker } from "@/components/DateRangePicker";
import { MainNav } from "@/components/MainNav";
import { Overview } from "@/components/Overview";
import { RecentSales } from "@/components/RecentSales";
import { Search } from "@/components/Search";
import TeamSwitcher from "@/components/TeamSwitcher";
import { UserNav } from "@/components/UserNav";
import { DashboardNav } from "@/components/DashboardNav";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import Link from "next/link";
import Head from "next/head";
import TaskPage from "@/components/Tasks";
import { DataTable } from "@/components/Table/DataTable";
import { columns, submissionColumns } from "@/constants/mock/Columns";
import { useRouter } from "next/router";
import useBucket from "@/hooks/useBucket";
import useSubmissions from "@/hooks/useSubmissions";

export default function Dashboard() {
  const router = useRouter();
  const { id } = router.query as { id: string };

  const bucket = useBucket(id ?? "");
  const submissions = useSubmissions({
    id: id ?? "",
    page: 1,
    pageSize: 10,
  });
  return (
    <>
      <div className="flex flex-col">
        <Head>
          <title>Bucket Name - Veldora</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <DashboardNav />
        <div className="flex-1 space-y-4 p-8 pt-6">
          <div className="flex flex-col justify-between space-y-2 md:flex-row md:items-center">
            <h2 className="text-3xl font-bold tracking-tight">
              {bucket.data?.name}
            </h2>
          </div>
          <Tabs defaultValue="submissions" className="space-y-4">
            <TabsList>
              <TabsTrigger value="submissions">Submissions</TabsTrigger>
              <TabsTrigger value="config">Config</TabsTrigger>
            </TabsList>
            <TabsContent value="submissions" className="space-y-4">
              <DataTable
                data={submissions?.data ?? []}
                columns={submissionColumns(
                  submissions?.data?.map((submission) => submission.data),
                )}
              />
            </TabsContent>
            <TabsContent value="config" className="space-y-4"></TabsContent>
          </Tabs>
        </div>
      </div>
    </>
  );
}
